1. Что такое "коллекция". 
  Коллекции - это классы, позволяющие работать с наборами однотипных данных

1.1. Перечислите основные методы из интерфейса java.util.Collection.
  boolean add, boolean addAll, void  clear(), int size(), boolean remove(), boolean removeAll() 
  boolean contains(), boolean containsAll(), boolean retainAll() 
  boolean equals(), int hashcode(), Object[] toArray()
  boolean isEmpty(), Iterator<E> iterator(), boolean removeIf()

2. Назовите преимущества использования коллекций.
  гибкость в размере коллекции, удалении элементов, добавлении элементов
  
3. Какие данные могут хранить коллекции?
  Коллекции могут хранить только сссылочные типы данных. Для хранения примитивов необходимо использовать “обертки”: Byte, Short, Integer, Long,
  Float, Double, Character, Boolean.

4. Какие есть типы коллекций? Как они характеризуются?
  Давайте посмотрим на основное назначение каждого интерфейса:
  ● Collection - является “корневый” элементом иерархии коллекций. Коллекция представляет
  собой группу объектов, называемых элементами. Интерфейс описывает функционал
  присущий абсолютно всем коллекциям.
  ● Set - коллекция, представляющая собой множество элементов, которое не может содержать
  дубликаты.
  ● List - коллекция, содержащая в себе последовательность элементов. В этом типе коллекций
  дубликаты разрешены. List позволяет обращаться к своим элементам по индексу,
  добавлять/изменять/удалять элементы.
  ● Queue - коллекция, позволяющая управлять процессом обработки элементов. Как правило,
  работает в режиме FIFO (first-in, first-out, первый вошел - первый вышел, например, очередь в
  кабинет). В таком случае элементы добавляются в хвост, а забираются с головы.
  ● Deque - коллекция, позволяющая управлять процессом обработки элементов. Deque может
  использоваться как в режиме FIFO , так и в режиме LIFO (last-in, first-out, последний вошел -
  первый вышел, например, в стопку бумаг кладут сверху листы, и оттуда же их забирают).
  Deque позволяет добавлять/изменять/удалять элементы как в голове, так и в хвосте
  коллекции.
  ● Map, коллекция которая отображает ключ, к его значению. Map не может содержать
  дублирующиеся ключи.
  ● SortedSet и SortedMap представляют собой упорядоченные в порядке возрастания версии
  коллекций Set (сортировка идет по элементам) и Map (сортировка производится по ключам).

5. Назовите основные реализации List, Set, Map.
  List: LinkedList, ArrayList, Vector, Stack
  Set: HashSet, LinkedHashSet, TreeSet
  Map: HashTable, LinkedHashMap, HashMap, TreeMap
  
6. В чём отличие ArrayList от LinkedList?
  -Каждый элемент в связном списке имеет
  ссылку на предыдущий и на следующий элементы. Сам же LinkedList имеет ссылку на свой первый и последний элемент
  -LinkedList, как и ArrayList, имеет параметр size, показывающий количество элементов в списке, но не
  имеет параметра capacity, так как все объекты связаны между собой ссылками друг на друга и могут
  быть раскиданы по памяти
  - LinkedList позволяет производить поиск элемента по индексу, однако из-за своей структуры, для
  поиска элемента приходится обходить элементы коллекции или от первого, или от последнего, и
  пробегать по ссылкам, пока не будет найден запрошенный элемент. 
  -При удалении элемента нет необходимости куда-либо смещать элементы коллекции (как это
  происходит в ArrayList), достаточно лишь переписать ссылки у двух соседних с удаленным объектов.
  При большом количестве элементов в коллекции, удаление из начала LinkedList будет производиться
  быстрее чем из начала ArrayList, это связано опять же с тем, что LinkedList перепишет всего пару
  ссылок, а ArrayList будет перемещать все элементы после удаленного влево на одну позицию.
  
7. В чём отличие HashSet от TreeSet?

8. В чём отличие Set от Map?
9. Как задается порядок следования объектов в коллекции, как отсортировать коллекцию?

10. Чем отличается Comparable от Comparator?
  Интерфейс Comparable используется только для сравнения объектов класса, в котором данный интерфейс реализован. 
  Т.е. interface Comparable определяет логику сравнения объекта определенного 
  ссылочного типа внутри своей реализации (по правилам разработчика).

 Comparator представляет отдельную реализацию и ее можно использовать многократно и с различными классами. 
 Т.е. interface Comparator позволяет создавать объекты, 
 которые будут управлять процессом сравнения (например при сортировках).

11. Что такое сортировка по принципу Natural Order?
  Дословно естественный порядок.
  естественный порядок чисел это порядок возрастания. 1 2 3
  естественный порядок строк это лексикографический порядок. "a", "b"
  Существует одноименный метод Comparator.naturalOrder(), этот метод возвращает компаратор основанный на реализации метода compareTo у типа, который его вызывает. 

12. Что такое equals и hashcode?
  Метод hashCode возвращает некоторое числовое (int) представление объекта как экземпляра класса. 
  Что это значит? Это значит, что если вы создали два разных экземпляра класса, то так как экземпляры разные, то и hashCode у них должны быть разными.  
  Метод equals отвечает на вопрос "равны ли объекты" и возвращает boolean.
  
13. Какие есть способы перебора всех элементов List?
14. Как реализован цикл foreach?
15. В чем разница между Iterator и Iterable?
16. Как происходит удаление элементов из ArrayList?
17. Как происходит удаление элементов из LinkedList?
