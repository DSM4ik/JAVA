1. Что такое ООП?
объектно-ориентированное программирование

2. Базовые концепции ООП?
Инкапсуляция, наследование, полиморфизм

3. Укажите из каких элементов состоит класс.
Конструкторы, методы, поля

4. Что такое конструктор?
Инициализирует объект во время его создания

5. Можно ли наследовать конструктор?
НЕТ
подкласс наследует все члены (поля, методы, вложенные классы) из суперкласса. 
в Java конструкторы не являются членами, поэтому они не наследуются подклассом,
но конструктор суперкласса может быть вызван из подкласса

6. Что такое перегрузка конструктора?
Перегрузка конструкторов позволяет установить различные способы начальной инициализации объектов класса.

7. Что такое статический метод?
Статические методы - методы самого класса
Метод который привязан к классу, а не объекту класса.
Могут вызывать только другие статические методы
им доступны только статические переменные

8. Что такое не статический метод?
Нестатические методы - методы экземпляра класса

9. Для чего используется ключевое слово this?
ключевое слово this в Java используется только в составе методов либо конструкторов экземпляра класса

10. Какой класс является базовый родительным классов для всех классов?
Object

11. Что такое наследование? Приведите примеры из реальной жизни.
С помощью наследования можно расширить функционал уже имеющихся классов за счет добавления нового функционала или изменения старого.
Например класс Animal - > Tiger
наследование позволяет создавать иерархию классов.

12. Опишите процесс создания нового объекта.
Тип_ссылочн_пер име_пер = new Тип_ссылочн_пер();

13. Как вызвать метод из родительского класса?
super.имя_метода

14. Что такое переопределение метода?
Дочерний класс может переопределить методы экземпляра своего родительского класса. 
Это называется переопределением метода. Сигнатура (тип возврата, тип параметров, количество параметров и порядок параметров)
должна быть такой же, какой была определена в родительском классе. Переопределение метода выполняется для достижения полиморфизма во время выполнения программы.

15. Можно ли переопределить статический метод?
НЕТ, т.к. статический метод принадлежит классу, а не объкту

16. Что такое виртуальная функция и используются ли они в Java?
В виртуальной виртуальной реальности Java совершенно иная. 
В Java виртуальная функция означает функцию, которая может быть переопределена в своих подклассах. 
Таким образом, все нестатические методы Java являются виртуальной функцией. Только конечная и частная функция не наследуются, поэтому они не являются виртуальной функцией.

17. Что такое перегрузка метода?
В программе мы можем использовать методы с одним и тем же именем, но с разными типами и/или количеством параметров
различие в типе возвращаемого значения для перегрузки не имеют никакого значения

18. Можно ли изменить тип возвращаемых данных при перегрузке метода?
различие в типе возвращаемого значения для перегрузки не имеют никакого значения

19. Что такое множественное наследование? Как его можно реализовать в Java.
Это населрвание от нескольких классов. В Java отсутствует, т.к. есть ромбовидная проблема
В Java множественное наследование не поддерживается в классах, 
но оно поддерживается в интерфейсах. 
И один интерфейс может расширять множество других интерфейсов.

20. Что такое полиморфизм? Приведите примеры из реальной жизни.
Полиморфизм – способность объекта принимать множество различных форм. 
Наиболее распространенное использование полиморфизма в ООП происходит,
когда ссылка на родительский класс используется для ссылки на объект дочернего класса.

21. Что такое инкапсуляция?
Способ управления доступом.

22. Как реализована инкапсуляция в Java?
модификаторы доступа (private, protected, package default);
геттеры и сеттеры.

23. Можно ли применить модификаторы доступ к конструкторам?
В шаблоне Singletone

24. Что такое интерфейс?
 Интерфейсы определяют некоторый функционал, 
 не имеющий конкретной реализации, который затем реализуют классы, 
 применяющие эти интерфейсы. И один класс может применить множество интерфейсов.

25. Какие типы исключительных ситуаций бывают?
Обрабатываемые и необрабатываемые

26. Назовите основные методы класса Object?
equals, hashcode, clone(), toString(), getClass(),
finalize(), clone()

27. Что такое шаблоны проектирования?
Паттерны (или шаблоны) проектирования описывают
типичные способы решения часто встречающихся
проблем при проектировании программ.

28. Объясните шаблон - декоратор.
Декоратор — это структурный паттерн проектирования, который позволяет динамически добавлять объектам новую функциональность,
оборачивая их в полезные «обёртки»
Декоратор имеет альтернативное название — обёртка. Оно более точно описывает суть паттерна: 
вы помещаете целевой объект в другой объект-обёртку, который запускает базовое поведение объекта, 
а затем добавляет к результату что-то своё.

29. Объясните шаблон - стратегия.
Стратегия — это поведенческий паттерн проектирования, который определяет семейство схожих алгоритмов 
и помещает каждый из них в собственный класс, 
после чего алгоритмы можно взаимозаменять прямо во время исполнения программы
