1) Что такое lambda-выражение?

2) Что такое функциональные интерфейсы?
    Это интерфейс, содержащий один абстрактный метод.

3) Перечислите функциональные интерфейсы из пакета java.util.function.
    Supplier, Consumer(BiConsumer), Function(BiFunction), Predicate(BiPredicate), UnaryOperator, BinaryOperator

4) Что такое функции высшего порядка?
    Функции высшего порядка - это функции, зависящие от других функций.

5) Какие функциональные интерфейсы из пакета java.util.function поддерживают функции высшего порядка?
    Все

6) Что такое ссылки на методы?

7) Что такое ссылки на конструкторы?

8) Расскажите о зоне видимости переменных в lambda - выражениях?
    1. Переменная, объявленная внутри лямбда-выражения, доступна только в самом лямбда-выражении.
    2. Переменная, объявленная вне лямбда-выражения, доступна как внутри лямбда-выражения, так и вне его.
       Переменную, объявленную вне лямбда-выражения, изменять внутри лямбда-выражения нельзя. (по сути она final)

9) Как быть в ситуации, если внутри lambda - выражении операторы могут выкинуть исключение?
   Не использовать лямбда-выражения с исключениями
   В лямбда-выражениях нельзя использовать методы, которые могут выбросить исключения.   

10) Что такое Stream API?

11) Расскажите, какой шаблон проектирования используется внутри Stream API?

12) Перечислите конвейерные методы Stream API.

13) Перечислите терминальные методы Stream API.

14) Что такое ленивая загрузка?
Лямбда вычисляется, когда вызывается метод у функционального интерфейса.

15) Что делает метод filter?

16) Что делает метод map.

17) Что делает метод flatMap?

18) Что делает метод collect?

19) Что делает метод reduce?

20) Что делает метод findFirst?

21) Возможно ли прервать выполнение потока по аналогии с break?

22) Возможно ли пропустить элемент потока по аналогии с continue?

23) Что такое Optional?

24) Перечислите методы Optional?

25) Расскажите про фабричные методы List.of, Set.of, Map.of?

26) Для чего используется ключевое слово var?

27) В каких случаях можно использовать var?
